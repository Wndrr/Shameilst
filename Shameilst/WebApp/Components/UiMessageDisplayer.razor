@using System.Security.Claims
@using WebApp.Services
@namespace WebApp.Components
@inject UiMessagingPipeline UiMessagingPipeline

@if (_messages != null && _messages.Any())
{
    foreach (var uiMessage in _messages)
    {
        <div>@uiMessage.Content</div>
    }
}

@code
{
    [CascadingParameter]
    private Task<AuthenticationState> AuthenticationStateTask { get; set; }

    private async Task<ClaimsPrincipal> GetUser() => (await AuthenticationStateTask).User;

    private List<UiMessage> _messages;

    protected override async Task OnInitializedAsync()
    {
        var claimsPrincipal = await GetUser();
        var userId = claimsPrincipal?.FindFirstValue(ClaimTypes.NameIdentifier);
        if(userId != null)
            _messages = UiMessagingPipeline.GetUiMessagesForUser(userId);
    }
}

